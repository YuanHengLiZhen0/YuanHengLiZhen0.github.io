---
layout:     post
title:     消息机制比较
date:       2018-01-17
author:    zwht
header-img: img/post-bg-ios9-web.jpg
catalog: true
tags:
    - NIO
    - AIO
---

##  消息机制比较


-------------------


##  概述
    当主机之间通信时可以是字节流,字符流,或者是java对象.通常消息通信机制是基于网络协议来实现的,常用的有
TCP和UDP.基于这两个协议之上的IO通常可分为**同步IO**和**异步IO**.
- 同步IO:
  BIO和NIO
- 异步IO:
  AIO

  举一个例子就是:BIO就是你在玩电脑,此时口渴了,就跑去烧水,但你并不知道水什么时候开啊,所以你守在厨房等水开(此时你并不能区处理其他的事,比如玩电脑).
NIO就是你在开水壶上装个开关,水开了就会报警,那么你就先去玩电脑(非阻塞),水开了(事件发生了)你在跑过来倒水喝(处理事件).AIO就更高级了,自动化烧水机器人收到
你的烧水命令,跑去烧水,烧完了然后把水倒好再通知你去喝,全程你就下了一个命令,然后等待通知就可以喝水了.


### 同步IO
**BIO:**就是当发起IO的读或写,均为阻塞模式.默认情况下服务端需要对每个请求建立一个线程来处理.
**NIO:**基于事件驱动思想,采用reactor实现,是非阻塞.当socket有流可读或可写入socket时，操作系统会相应的通知引用程序进行处理，应用再将流读取到缓冲区或写入操作系统。不再是一个连接就要对应一个处理线程了，而是有效的请求，对应一个线程，当连接没有数据时，是没有工作线程来处理的。

### 异步IO
**AIO:**基于事件驱动思想,实现上采用Proactor.


